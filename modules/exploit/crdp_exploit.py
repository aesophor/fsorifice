import sys
import mmap
import binascii
import platform



# detect OS info.
os_name = platform.system()
os_rel  = platform.release()
os_arch = platform.architecture()[0]

print 'Your Computer Info:'
print os_name + os_rel + ' ' + os_arch
print '================================'

if os_name == 'Windows':
    print 'Press enter to patch termsrv.dll'
else:
    print 'Your system is not supported.'

tmp = raw_input()

# map the file into memory.
f = open('termsrv.dll', 'a+')
m = mmap.mmap(f.fileno(), 0)

if os_arch == '64bit':
    try:
        hex_tmp = binascii.hexlify(m[0:])
        hex_tmp = hex_tmp.replace('39813c0600000f849e310500','b80001000089813806000090')
        hex_tmp = hex_tmp.replace('090085c07f078bd8','090085c090908bd8')
        hex_tmp = hex_tmp.replace('bb01000000c7','bb00000000c7')
        m[0:] = binascii.unhexlify(hex_tmp)
        m.flush()
        print '[*] termsrv.dll has been patched.'
    except Exception, e:
        print e

elif os_arch == '32bit':
    try:
        hex_tmp = binascii.hexlify(m[0:])
        hex_tmp = hex_tmp.replace('3b81200300000f84c0ec0100','b80001000089812003000090')
        hex_tmp = hex_tmp.replace('837df8007415','837df800eb15')
        hex_tmp = hex_tmp.replace('8d44242843','8d44242890')
        m[0:] = binascii.unhexlify(hex_tmp)
        m.flush()
        print '[*] termsrv.dll has been patched.'
    except Exception, e:
        print e
